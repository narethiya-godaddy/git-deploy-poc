name: 'Deploy Repository via rsync'
description: 'A custom action to deploy a repository to a remote server using rsync.'

inputs:
  ssh_user:
    description: 'The SSH username'
    required: true
  ssh_password:
    description: 'The SSH password'
    required: true
  remote_host:
    description: 'The remote host (IP or domain)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      with:
        path: git_checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update -q && sudo apt-get install -y rsync sshpass

    - name: Add remote host to known_hosts
      shell: bash
      env:
        REMOTE_HOST: ${{ inputs.remote_host }}
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H "$REMOTE_HOST" >> ~/.ssh/known_hosts

    - name: Create ignore file for exclusions
      shell: bash
      env:
        IGNORE_FILE: "output/ignore_files.txt"
      run: |
        mkdir -p output
        echo ".git" > $IGNORE_FILE
        echo ".github" >> $IGNORE_FILE
        echo "Thumbs.db" >> $IGNORE_FILE
        echo ".gitignore" >> $IGNORE_FILE
        echo ".htaccess" >> $IGNORE_FILE
        echo "readme.md" >> $IGNORE_FILE
        echo ".gitignore" >> $IGNORE_FILE
        echo "index.php" >> $IGNORE_FILE
        echo "plat-cron.php" >> $IGNORE_FILE
        echo "wp-activate.php" >> $IGNORE_FILE
        echo "wp-blog-header.php" >> $IGNORE_FILE
        echo "wp-comments-post.php" >> $IGNORE_FILE
        echo "wp-cron.php" >> $IGNORE_FILE
        echo "wp-links-opml.php" >> $IGNORE_FILE
        echo "wp-load.php" >> $IGNORE_FILE
        echo "wp-login.php" >> $IGNORE_FILE
        echo "wp-mail.php" >> $IGNORE_FILE
        echo "wp-settings.php" >> $IGNORE_FILE
        echo "wp-signup.php" >> $IGNORE_FILE
        echo "wp-trackback.php" >> $IGNORE_FILE
        echo "xmlrpc.php" >> $IGNORE_FILE
        echo "./platform/" >> $IGNORE_FILE
        echo "./wp-admin/" >> $IGNORE_FILE
        echo "./wp-includes/" >> $IGNORE_FILE
        echo "./wp-content/mu-plugins/" >> $IGNORE_FILE
        echo "./wp-content/themes/twenty*/" >> $IGNORE_FILE
        echo "./wp-content/object-cache.php" >> $IGNORE_FILE
        echo "./wp-content/uploads/" >> $IGNORE_FILE
        echo "./*.log" >> $IGNORE_FILE
        echo "Ignoring following files/ dir from tar file"
        cat $IGNORE_FILE

    - name: Create tar file
      shell: bash
      env:
        TAR_FILE: "output/repository.tar.gz"
        IGNORE_FILE: "output/ignore_files.txt"
        CHECKOUT_DIR: "git_checkout"
        DIFF_FILE: "output/differences.txt"
        SSH_USER: ${{ inputs.ssh_user }}
        SSH_PASSWORD: ${{ inputs.ssh_password }}
        REMOTE_HOST: ${{ inputs.remote_host }}
      run: |
          echo "Creating tar file: $TAR_FILE"
          sshpass -p "$SSH_PASSWORD" rsync -av --dry-run --checksum --exclude=.git --out-format='%n' $CHECKOUT_DIR/ "$SSH_USER@$REMOTE_HOST:/html/" > $DIFF_FILE
          sed -i '' '/\/$/d' "${DIFF_FILE}"
          sed -i '' '1,2d;$d;$d;$d;$d;$d' "${DIFF_FILE}"
          echo "differences file list start"
          cat "$DIFF_FILE"
          echo "List ends here"
          END_TIME=$(date +%s)
          RSYNC_DURATION=$((END_TIME - START_TIME))
          echo "Rsync dry-run completed in $RSYNC_DURATION seconds."
          START_TIME=$(date +%s)
          tar -czvf $TAR_FILE -T "$DIFF_FILE"
          END_TIME=$(date +%s)
          TAR_DURATION=$((END_TIME - START_TIME))
          echo "TAR completed in $TAR_DURATION seconds."
          echo "Tar file created successfully."
          echo "tar file size:"
          ls -lh $TAR_FILE | awk '{print $5}'
          cat "$DIFF_FILE"

    - name: Deploy files via rsync
      shell: bash
      env:
        SSH_USER: ${{ inputs.ssh_user }}
        SSH_PASSWORD: ${{ inputs.ssh_password }}
        REMOTE_HOST: ${{ inputs.remote_host }}
        REMOTE_DIR: '/html/deployer'
        TAR_FILE: "output/repository.tar.gz"
        CHECKOUT_DIR: "git_checkout"
      run: |
        echo "Creating remote directory: $REMOTE_DIR"
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$REMOTE_HOST" "mkdir -p '$REMOTE_DIR' || exit 1"
        echo "Uploading tar file to $REMOTE_DIR"
        sshpass -p "$SSH_PASSWORD" rsync -avz --delete "$TAR_FILE" "$SSH_USER@$REMOTE_HOST:$REMOTE_DIR"
        echo "Deployment completed successfully."

    - name: Clean up
      shell: bash
      env:
        TAR_FILE: "output/repository.tar.gz"
        IGNORE_FILE: "output/ignore_files.txt"
        CHECKOUT_DIR: "git_checkout"
      run: |
        echo "Cleaning up temporary files..."
        rm -f "$TAR_FILE"
        rm -f "$IGNORE_FILE"
        rm -rf "$CHECKOUT_DIR"
        echo "Temporary files cleaned up successfully."
        ls -lha

    - name: Run Deployer
      shell: bash
      env:
        SSH_USER: ${{ inputs.ssh_user }}
        SSH_PASSWORD: ${{ inputs.ssh_password }}
        REMOTE_HOST: ${{ inputs.remote_host }}
      run: |
        echo "Run Server deployer"
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$REMOTE_HOST" "/html/deployer.sh || exit 1"
