name: 'Deploy Repository via rsync'
description: 'A custom action to deploy a repository to a remote server using rsync.'

inputs:
  ssh_user:
    description: 'The SSH username'
    required: true
  ssh_password:
    description: 'The SSH password'
    required: true
  remote_host:
    description: 'The remote host (IP or domain)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      with:
        path: git_checkout
      uses: actions/checkout@v3

    - name: Checkout Action
      with:
        path: git_action
        repository: ${{ github.action_repository }}
        ref: ${{ github.action_ref }}
      uses: actions/checkout@v3

    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update -q && sudo apt-get install -y rsync sshpass
        echo github Object: ${{ github }}

    - name: Add remote host to known_hosts
      shell: bash
      env:
        REMOTE_HOST: ${{ inputs.remote_host }}
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H "$REMOTE_HOST" >> ~/.ssh/known_hosts
        ls -lha
        ls git_action -lha

    - name: Create tar file
      shell: bash
      env:
        TAR_FILE: "output/repository.tar.gz"
        IGNORE_FILE: "git_action/ignore_files.txt"
        CHECKOUT_DIR: "git_checkout"
        DIFF_FILE: "output/differences.txt"
        SSH_USER: ${{ inputs.ssh_user }}
        SSH_PASSWORD: ${{ inputs.ssh_password }}
        REMOTE_HOST: ${{ inputs.remote_host }}
      run: |
        EXCLUDE_ARGS=""
        while IFS= read -r line; do
          EXCLUDE_ARGS+="--exclude=$line "
        done < "$IGNORE_FILE"

        echo "Preparing a cleaned list of changed files for sync with the remote server."
        sshpass -p "$SSH_PASSWORD" rsync -av --dry-run --checksum $EXCLUDE_ARGS $CHECKOUT_DIR/ "$SSH_USER@$REMOTE_HOST:/html/" | grep -v '/$' > $DIFF_FILE
        sed -i '1d;N;$!P;$!D;$d;$d' "${DIFF_FILE}"

        echo "Files to be synchronized:"
        cat "$DIFF_FILE"
        echo "End of list."
        
        cd $CHECKOUT_DIR
        echo "Creating tar file: $TAR_FILE"
        tar -czvf "../$TAR_FILE" -T "../$DIFF_FILE"
        cd ../
        echo "Tar file created successfully."
        echo "tar file size:"

    - name: Deploy files via rsync
      shell: bash
      env:
        SSH_USER: ${{ inputs.ssh_user }}
        SSH_PASSWORD: ${{ inputs.ssh_password }}
        REMOTE_HOST: ${{ inputs.remote_host }}
        REMOTE_DIR: '/html/deployer'
        TAR_FILE: "output/repository.tar.gz"
        CHECKOUT_DIR: "git_checkout"
      run: |
        echo "Creating remote directory: $REMOTE_DIR"
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$REMOTE_HOST" "mkdir -p '$REMOTE_DIR' || exit 1"
        echo "Uploading tar file to $REMOTE_DIR"
        REMOTE_TAR_FILE="repository_$(openssl rand -hex 4).tar.gz"
        echo "REMOTE_TAR_FILE=$REMOTE_TAR_FILE" >> $GITHUB_ENV
        echo "REMOTE_TAR_FILE: $REMOTE_TAR_FILE"
        sshpass -p "$SSH_PASSWORD" rsync -avz --delete "$TAR_FILE" "$SSH_USER@$REMOTE_HOST:$REMOTE_DIR/$REMOTE_TAR_FILE"
        echo "Tar file uploaded successfully."

    - name: Clean up
      shell: bash
      env:
        TAR_FILE: "output/repository.tar.gz"
        CHECKOUT_DIR: "git_checkout"
      run: |
        echo "Cleaning up temporary files..."
        rm -f "$TAR_FILE"
        rm -rf "$CHECKOUT_DIR"
        echo "Temporary files cleaned up successfully."
        ls -lha

    - name: Run Deployer
      shell: bash
      env:
        SSH_USER: ${{ inputs.ssh_user }}
        SSH_PASSWORD: ${{ inputs.ssh_password }}
        REMOTE_HOST: ${{ inputs.remote_host }}
      run: |
        echo "Run Server deployer"
        echo "tar file name from Env: $REMOTE_TAR_FILE"
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no "$SSH_USER@$REMOTE_HOST" "/html/deployer.sh || exit 1"
